@incollection{abrahamsson_leanagile_2010,
	address = {Berlin, Heidelberg},
	title = {Lean/{Agile} {Software} {Development} {Methodologies} in {Regulated} {Environments} – {State} of the {Art}},
	volume = {65},
	copyright = {http://www.springer.com/tdm},
	isbn = {978-3-642-16415-6 978-3-642-16416-3},
	url = {http://link.springer.com/10.1007/978-3-642-16416-3_4},
	language = {en},
	urldate = {2024-11-30},
	booktitle = {Lean {Enterprise} {Software} and {Systems}},
	publisher = {Springer Berlin Heidelberg},
	author = {Cawley, Oisín and Wang, Xiaofeng and Richardson, Ita},
	editor = {Abrahamsson, Pekka and Oza, Nilay},
	year = {2010},
	doi = {10.1007/978-3-642-16416-3_4},
	note = {Series Title: Lecture Notes in Business Information Processing},
	pages = {31--36},
}

@inproceedings{laukkarinen_devops_2017,
	address = {Buenos Aires, Argentina},
	title = {{DevOps} in {Regulated} {Software} {Development}: {Case} {Medical} {Devices}},
	isbn = {978-1-5386-2675-7},
	shorttitle = {{DevOps} in {Regulated} {Software} {Development}},
	url = {http://ieeexplore.ieee.org/document/7966870/},
	doi = {10.1109/ICSE-NIER.2017.20},
	urldate = {2024-11-30},
	booktitle = {2017 {IEEE}/{ACM} 39th {International} {Conference} on {Software} {Engineering}: {New} {Ideas} and {Emerging} {Technologies} {Results} {Track} ({ICSE}-{NIER})},
	publisher = {IEEE},
	author = {Laukkarinen, Teemu and Kuusinen, Kati and Mikkonen, Tommi},
	month = may,
	year = {2017},
	pages = {15--18},
}

@article{garvin_what_1984,
	title = {What {Does} “{Product} {Quality}” {Really} {Mean}?},
	journal = {Sloan Management Review},
	author = {Garvin, David A},
	year = {1984},
	pages = {25},
}

@techreport{mccall_factors_1977,
	title = {Factors in {Software} {Quality}. {Volume} {I}. {Concepts} and {Definitions} of {Software} {Quality}},
	url = {https://apps.dtic.mil/sti/citations/ADA049014},
	abstract = {This document is the final technical report CDRL A003 for the Factors in Software Quality Study, contract number F30602-76-C-0417. The report consists of three volumes, as follows Volume I Concept and Definitions of Software Quality, Volume II Metric Data Collection and Validation, Volume III preliminary Handbook on Software Quality for an, Acquisition Manager. The objective of the study was to establish a concept of software quality and provide an Air Force acquisition manager with a mechanism to quantitatively specify and measure the desired level of quality in a software product. Software metrics provide the mechanism for the quantitative specification and measurement of quality. This first volume describes the process of developing our concepts of software quality and what the underlying software attributes are that provide the quality, and defines the metrics which provide a measure of the degree to which the attributes exist.},
	language = {en},
	urldate = {2022-01-19},
	institution = {GENERAL ELECTRIC CO SUNNYVALE CA},
	author = {McCall, Jim A. and Richards, Paul K. and Walters, Gene F.},
	month = nov,
	year = {1977},
	note = {Section: Technical Reports},
	file = {McCall et al. - 1977 - Factors in Software Quality. Volume I. Concepts an.pdf:C\:\\Users\\asadovykh\\Zotero\\storage\\EGWPPYYG\\McCall et al. - 1977 - Factors in Software Quality. Volume I. Concepts an.pdf:application/pdf},
}


@book{zhu_software_2005,
	title = {Software {Design} {Methodology}: {From} {Principles} to {Architectural} {Styles}},
	isbn = {978-0-08-045496-2},
	shorttitle = {Software {Design} {Methodology}},
	abstract = {Software Design Methodology explores the theory of software architecture, with particular emphasis on general design principles rather than specific methods. This book provides in depth coverage of large scale software systems and the handling of their design problems. It will help students gain an understanding of the general theory of design methodology, and especially in analysing and evaluating software architectural designs, through the use of case studies and examples, whilst broadening their knowledge of large-scale software systems. This book shows how important factors, such as globalisation, modelling, coding, testing and maintenance, need to be addressed when creating a modern information system. Each chapter contains expected learning outcomes, a summary of key points and exercise questions to test knowledge and skills. Topics range from the basic concepts of design to software design quality; design strategies and processes; and software architectural styles. Theory and practice are reinforced with many worked examples and exercises, plus case studies on extraction of keyword vector from text; design space for user interface architecture; and document editor. Software Design Methodology is intended for IT industry professionals as well as software engineering and computer science undergraduates and graduates on Msc conversion courses.* In depth coverage of large scale software systems and the handling of their design problems* Many worked examples, exercises and case studies to reinforce theory and practice* Gain an understanding of the general theory of design methodology},
	language = {en},
	publisher = {Elsevier},
	author = {Zhu, Hong},
	month = mar,
	year = {2005},
	note = {Google-Books-ID: rqRVbb0SKjEC},
	keywords = {Computers / Software Development \& Engineering / General},
}

@book{perry_effective_1988,
	address = {USA},
	title = {Effective methods of {EDP} quality assurance: 2nd edition},
	isbn = {978-0-89435-196-9},
	shorttitle = {Effective methods of {EDP} quality assurance},
	publisher = {QED Information Sciences, Inc.},
	author = {Perry, William E.},
	month = oct,
	year = {1988},
}

@book{gillies_software_2011,
	title = {Software {Quality}: {Theory} and {Management}},
	isbn = {978-1-4467-5398-9},
	shorttitle = {Software {Quality}},
	abstract = {Software Quality: Theory and Management has been in print around the world since 1992. After the publisher accidentally removed it from the European market in 1998, it continued to sell well in South East Asia and has to date sold over 10,000 copies world-wide. Originally used with BSc and MSc students at the University of Salford, previous editions have been used as a textbook in the UK, Europe, North America and Asia. However, the contents of the second edition look sadly dated by now, and even core concepts such as development methodologies have moved on substantially. Therefore, I have decided to produce a third edition which has been updated in both content and method of delivery.},
	language = {en},
	publisher = {Lulu.com},
	author = {Gillies, Alan},
	year = {2011},
	note = {Google-Books-ID: XTvpAQAAQBAJ},
	keywords = {Computers / General},
}

@article{kano1984attractive,
  title={Attractive quality and must-be quality},
  author={Kano, Noriaki and Seraku, Nobuhiku and Takahashi, Fumio and Tsuji, Shinichi},
  year={1984},
  publisher={JOURNAL OF THE JAPANESE SOCIETY FOR QUALITY CONTROL}
}



